{"version":3,"sources":["firebase/index.js","components/Logout.js","components/AddNoteForm.js","components/Note.js","components/Loading.js","components/NoteList.js","components/Login.js","components/NoteApp.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","provider","auth","GoogleAuthProvider","addScope","Logout","Button","fullWidth","variant","color","onClick","signOut","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","AddNoteForm","useAuthState","user","useState","title","setTitle","body","setBody","titleHelper","setTitleHelper","bodyHelper","setBodyHelper","titleError","setTitleError","bodyError","setBodyError","classes","className","onSubmit","e","preventDefault","ref","uid","push","importance","createdAt","ServerValue","TIMESTAMP","noValidate","TextField","value","onChange","target","error","helperText","id","label","name","autoComplete","autoFocus","type","multiline","Grid","container","item","xs","paper","padding","display","overflow","flexDirection","italic","fontStyle","fontSize","high","palette","getContrastText","red","backgroundColor","significant","orange","neutral","green","reduced","blue","low","purple","break","wordBreak","minHeight","Note","note","Paper","ListItem","ListItemIcon","Avatar","checked","ListItemText","disableTypography","Typography","split","map","str","index","formatDistanceToNowStrict","ListItemSecondaryAction","direction","justify","alignItems","Tooltip","placement","IconButton","key","remove","update","progress","card","marginBottom","Loading","props","Card","CardContent","align","gutterBottom","text","CircularProgress","size","list","grid","paddingTop","NoteList","useList","snapshots","loadingNotes","length","List","val","login","Login","signInWithPopup","Copyright","Link","href","root","main","avatar","secondary","upper","footer","grey","NoteApp","loading","CssBaseline","Container","component","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","primary","dark","light","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fc008c24.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDr8Zix9phP7yKXnd47btENUXyXQvA3Eec',\n  authDomain: 'mdmundonotes.firebaseapp.com',\n  projectId: 'mdmundonotes',\n  storageBucket: 'mdmundonotes.appspot.com',\n  messagingSenderId: '1019982159986',\n  appId: '1:1019982159986:web:c7098cc516c4fa26faa2eb'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('profile');\nprovider.addScope('email');\n\nexport { firebase, provider, database as default };\n","import Button from '@material-ui/core/Button';\nimport { firebase } from '../firebase';\n\nconst Logout = () => {\n  return (\n    <Button\n      fullWidth\n      variant='text'\n      color='secondary'\n      onClick={() => {\n        firebase.auth().signOut();\n      }}>\n      Log out\n    </Button>\n  );\n};\n\nexport { Logout as default };\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport database, { firebase } from '../firebase';\nimport Logout from './Logout';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst AddNoteForm = () => {\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [titleHelper, setTitleHelper] = useState('');\n  const [bodyHelper, setBodyHelper] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [bodyError, setBodyError] = useState(false);\n\n  const addNote = (e) => {\n    e.preventDefault();\n\n    setTitleError(!title);\n    setBodyError(!body);\n    setTitleHelper(title ? '' : 'Title can not be empty.');\n    setBodyHelper(body ? '' : 'Body can not be empty.');\n\n    if (title && body) {\n      database.ref(`users/${user?.uid}/notes`).push({\n        title,\n        body,\n        importance: 2,\n        createdAt: firebase.database.ServerValue.TIMESTAMP\n      });\n      setTitle('');\n      setBody('');\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <form className={classes.form} onSubmit={addNote} noValidate>\n      <TextField\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        error={titleError}\n        helperText={titleHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        id='title'\n        label='Title'\n        name='title'\n        autoComplete='off'\n        autoFocus\n      />\n      <TextField\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        error={bodyError}\n        helperText={bodyHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        name='body'\n        label='Body'\n        type='body'\n        id='body'\n        autoComplete='off'\n        multiline\n      />\n      <Grid container spacing={1} className={classes.submit}>\n        <Grid item xs={9}>\n          <Button fullWidth type='submit' variant='contained' color='primary'>\n            Add Note\n          </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Logout />\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport { AddNoteForm as default };\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport CheckIcon from '@material-ui/icons/Check';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { red, orange, green, blue, purple } from '@material-ui/core/colors';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport database, { firebase } from '../firebase';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(1.5),\n    padding: theme.spacing(0.5),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  italic: {\n    fontStyle: 'italic',\n    fontSize: theme.spacing(1)\n  },\n  high: {\n    color: theme.palette.getContrastText(red[900]),\n    backgroundColor: red[900]\n  },\n  significant: {\n    color: theme.palette.getContrastText(orange[800]),\n    backgroundColor: orange[800]\n  },\n  neutral: {\n    color: theme.palette.getContrastText(green[600]),\n    backgroundColor: green[600]\n  },\n  reduced: {\n    color: theme.palette.getContrastText(blue[500]),\n    backgroundColor: blue[500]\n  },\n  low: {\n    color: theme.palette.getContrastText(purple[300]),\n    backgroundColor: purple[300]\n  },\n  break: {\n    wordBreak: 'break-all'\n  },\n  item: {\n    minHeight: theme.spacing(18)\n  }\n}));\n\nconst Note = ({ note }) => {\n  const tags = ['high', 'significant', 'neutral', 'reduced', 'low'];\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n\n  const setImportance = () => {\n    database\n      .ref(`users/${user.uid}/notes/${note.key}`)\n      .update({ importance: (note.importance + 1) % 5 });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <ListItem className={classes.item}>\n        <ListItemIcon>\n          <Avatar className={classes[tags[note.importance]]}>\n            {!!note.checked && <CheckIcon />}\n          </Avatar>\n        </ListItemIcon>\n        <ListItemText disableTypography>\n          <>\n            <Typography variant='body1' className={classes.break}>\n              {note.title}\n            </Typography>\n            {note.body.split('\\n').map((str, index) => (\n              <Typography\n                key={index}\n                color='textSecondary'\n                variant='body1'\n                className={classes.break}>\n                {str || '\\u00A0'}\n              </Typography>\n            ))}\n            <Typography\n              color='textSecondary'\n              variant='caption'\n              className={classes.italic}>\n              {formatDistanceToNowStrict(note.createdAt)}\n            </Typography>\n          </>\n        </ListItemText>\n        <ListItemSecondaryAction>\n          <Grid\n            container\n            direction='column'\n            justify='space-around'\n            alignItems='center'>\n            <Grid item xs={4}>\n              <Tooltip title='Delete' placement='right'>\n                <IconButton\n                  onClick={() =>\n                    database.ref(`users/${user.uid}/notes/${note.key}`).remove()\n                  }>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={4}>\n              <Tooltip\n                title={note.checked ? 'Uncheck' : 'Check'}\n                placement='right'>\n                <IconButton\n                  onClick={(e) =>\n                    database\n                      .ref(`users/${user.uid}/notes/${note.key}`)\n                      .update({ checked: !note.checked })\n                  }>\n                  {note.checked ? (\n                    <CheckBoxIcon />\n                  ) : (\n                    <CheckBoxOutlineBlankIcon />\n                  )}\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={4}>\n              <Tooltip title='Tag' placement='right'>\n                <IconButton onClick={setImportance}>\n                  <BrushIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </Paper>\n  );\n};\n\nexport { Note as default };\n","import { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    display: 'block',\n    margin: 'auto'\n  },\n  card: {\n    marginTop: theme.spacing(6)\n  },\n  title: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst Loading = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          variant='subtitle2'\n          display='block'\n          align='center'\n          gutterBottom>\n          {props.text}\n        </Typography>\n        <CircularProgress\n          className={classes.progress}\n          variant='indeterminate'\n          size='2.2rem'\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Loading;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { useList } from 'react-firebase-hooks/database';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport Note from './Note';\nimport database, { firebase } from '../firebase';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: '100%'\n  },\n  paper: {\n    marginTop: theme.spacing(1.5),\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  grid: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nconst NoteList = () => {\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n  const [snapshots, loadingNotes, errorNotes] = useList(\n    database.ref(`users/${user.uid}/notes`)\n  );\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {loadingNotes ? (\n        <Loading text='Loading Notes' />\n      ) : snapshots.length === 0 ? (\n        <Grid item className={classes.grid}>\n          <List className={classes.list}>\n            <Paper className={classes.paper}>\n              <Typography variant='body2' display='block' color='textSecondary'>\n                There is no note here.\n              </Typography>\n            </Paper>\n          </List>\n        </Grid>\n      ) : (\n        <Grid item className={classes.grid}>\n          <List className={classes.list}>\n            {snapshots.map((note) => (\n              <Note key={note.key} note={{ key: note.key, ...note.val() }} />\n            ))}\n          </List>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport { NoteList as default };\n","import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { firebase, provider } from '../firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  login: {\n    marginTop: theme.spacing(7)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.login}\n      fullWidth\n      variant='contained'\n      color='primary'\n      onClick={() => {\n        firebase.auth().signInWithPopup(provider);\n      }}>\n      Log in\n    </Button>\n  );\n};\n\nexport { Login as default };\n","import { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport AddNoteForm from './AddNoteForm';\nimport NoteList from './NoteList';\nimport Login from './Login';\nimport { firebase } from '../firebase';\nimport Loading from './Loading';\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Created by '}\n      <Link color='inherit' href='https://github.com/mdmundo'>\n        Edmundo Paulino\n      </Link>\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  upper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  }\n}));\n\nconst NoteApp = () => {\n  const [user, loading, error] = useAuthState(firebase.auth());\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component='main' className={classes.main} maxWidth='xs'>\n        <div className={classes.upper}>\n          <Avatar className={classes.avatar}>\n            <EventNoteIcon />\n          </Avatar>\n          <Typography component='h1' variant='h3'>\n            Notes\n          </Typography>\n        </div>\n        {user ? (\n          <>\n            <AddNoteForm />\n            <NoteList />\n          </>\n        ) : loading ? (\n          <Loading text='Loading User' />\n        ) : (\n          <Login />\n        )}\n      </Container>\n      <footer className={classes.footer}>\n        <Container maxWidth='sm'>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n};\n\nexport { NoteApp as default };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport NoteApp from './components/NoteApp';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: 'rgb(17, 82, 147)',\n      light: 'rgb(71, 145, 219)',\n      main: '#1976d2'\n    },\n    secondary: {\n      dark: 'rgb(154, 0, 54)',\n      light: 'rgb(227, 51, 113)',\n      main: 'rgb(220, 0, 78)'\n    }\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <NoteApp />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}