{"version":3,"sources":["firebase/index.js","components/Logout.js","components/AddNoteForm.js","components/Note.js","components/Loading.js","components/NoteList.js","components/Login.js","components/NoteApp.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","provider","auth","GoogleAuthProvider","addScope","Logout","Button","fullWidth","variant","color","onClick","signOut","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","AddNoteForm","useAuthState","user","useState","title","setTitle","body","setBody","titleHelper","setTitleHelper","bodyHelper","setBodyHelper","titleError","setTitleError","bodyError","setBodyError","classes","className","onSubmit","e","preventDefault","ref","uid","push","noValidate","TextField","value","onChange","target","error","helperText","id","label","name","autoComplete","autoFocus","type","multiline","Grid","container","item","xs","paper","padding","display","overflow","flexDirection","Note","note","Paper","ListItem","ListItemIcon","Tooltip","placement","Checkbox","checked","key","update","ListItemText","disableTypography","primary","Typography","secondary","split","map","str","index","ListItemSecondaryAction","IconButton","edge","remove","progress","card","marginBottom","Loading","props","Card","CardContent","align","gutterBottom","text","CircularProgress","size","list","grid","paddingTop","NoteList","useList","snapshots","loadingNotes","length","List","val","login","Login","signInWithPopup","Copyright","Link","href","root","minHeight","main","avatar","backgroundColor","palette","upper","alignItems","footer","grey","NoteApp","loading","CssBaseline","Container","component","maxWidth","Avatar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","dark","light","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a5cd5912.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDr8Zix9phP7yKXnd47btENUXyXQvA3Eec',\n  authDomain: 'mdmundonotes.firebaseapp.com',\n  projectId: 'mdmundonotes',\n  storageBucket: 'mdmundonotes.appspot.com',\n  messagingSenderId: '1019982159986',\n  appId: '1:1019982159986:web:c7098cc516c4fa26faa2eb'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('profile');\nprovider.addScope('email');\n\nexport { firebase, provider, database as default };\n","import Button from '@material-ui/core/Button';\nimport { firebase } from '../firebase';\n\nconst Logout = () => {\n  return (\n    <Button\n      fullWidth\n      variant='text'\n      color='secondary'\n      onClick={() => {\n        firebase.auth().signOut();\n      }}>\n      Log out\n    </Button>\n  );\n};\n\nexport { Logout as default };\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport database, { firebase } from '../firebase';\nimport Logout from './Logout';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst AddNoteForm = () => {\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [titleHelper, setTitleHelper] = useState('');\n  const [bodyHelper, setBodyHelper] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [bodyError, setBodyError] = useState(false);\n\n  const addNote = (e) => {\n    e.preventDefault();\n\n    setTitleError(!title);\n    setBodyError(!body);\n    setTitleHelper(title ? '' : 'Title can not be empty.');\n    setBodyHelper(body ? '' : 'Body can not be empty.');\n\n    if (title && body) {\n      database.ref(`users/${user?.uid}/notes`).push({ title, body });\n      setTitle('');\n      setBody('');\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <form className={classes.form} onSubmit={addNote} noValidate>\n      <TextField\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        error={titleError}\n        helperText={titleHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        id='title'\n        label='Title'\n        name='title'\n        autoComplete='off'\n        autoFocus\n      />\n      <TextField\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        error={bodyError}\n        helperText={bodyHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        name='body'\n        label='Body'\n        type='body'\n        id='body'\n        autoComplete='off'\n        multiline\n      />\n      <Grid container spacing={1} className={classes.submit}>\n        <Grid item xs={9}>\n          <Button fullWidth type='submit' variant='contained' color='primary'>\n            Add Note\n          </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Logout />\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport { AddNoteForm as default };\n","import { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport database, { firebase } from '../firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(1.5),\n    padding: theme.spacing(0.5),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n}));\n\nconst Note = ({ note }) => {\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <ListItem>\n        <ListItemIcon>\n          <Tooltip title='Mark this note' placement='left'>\n            <Checkbox\n              checked={note.checked || false}\n              onChange={(e) =>\n                database\n                  .ref(`users/${user.uid}/notes/${note.key}`)\n                  .update({ checked: e.target.checked })\n              }\n            />\n          </Tooltip>\n        </ListItemIcon>\n        <ListItemText\n          disableTypography\n          primary={<Typography variant='body1'>{note.title}</Typography>}\n          secondary={note.body.split('\\n').map((str, index) => (\n            <Typography key={index} color='textSecondary'>\n              {str}\n            </Typography>\n          ))}\n        />\n        <ListItemSecondaryAction>\n          <Tooltip title='Delete this note' placement='right'>\n            <IconButton\n              edge='end'\n              onClick={() =>\n                database.ref(`users/${user.uid}/notes/${note.key}`).remove()\n              }>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </Paper>\n  );\n};\n\nexport { Note as default };\n","import { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    display: 'block',\n    margin: 'auto'\n  },\n  card: {\n    marginTop: theme.spacing(6)\n  },\n  title: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst Loading = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          variant='subtitle2'\n          display='block'\n          align='center'\n          gutterBottom>\n          {props.text}\n        </Typography>\n        <CircularProgress\n          className={classes.progress}\n          variant='indeterminate'\n          size='2.2rem'\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Loading;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { useList } from 'react-firebase-hooks/database';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport Note from './Note';\nimport database, { firebase } from '../firebase';\nimport Loading from './Loading';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: '100%'\n  },\n  paper: {\n    marginTop: theme.spacing(1.5),\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  grid: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nconst NoteList = () => {\n  const [user, loadingAuth, errorAuth] = useAuthState(firebase.auth());\n  const [snapshots, loadingNotes, errorNotes] = useList(\n    database.ref(`users/${user.uid}/notes`)\n  );\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {loadingNotes ? (\n        <Loading text='Loading Notes' />\n      ) : snapshots.length === 0 ? (\n        <Grid item className={classes.grid}>\n          <List className={classes.list}>\n            <Paper className={classes.paper}>\n              <Typography variant='body2' display='block' color='textSecondary'>\n                There is no note here.\n              </Typography>\n            </Paper>\n          </List>\n        </Grid>\n      ) : (\n        <Grid item className={classes.grid}>\n          <List className={classes.list}>\n            {snapshots.map((note) => (\n              <Note key={note.key} note={{ key: note.key, ...note.val() }} />\n            ))}\n          </List>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport { NoteList as default };\n","import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { firebase, provider } from '../firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  login: {\n    marginTop: theme.spacing(7)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.login}\n      fullWidth\n      variant='contained'\n      color='primary'\n      onClick={() => {\n        firebase.auth().signInWithPopup(provider);\n      }}>\n      Log in\n    </Button>\n  );\n};\n\nexport { Login as default };\n","import { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport AddNoteForm from './AddNoteForm';\nimport NoteList from './NoteList';\nimport Login from './Login';\nimport { firebase } from '../firebase';\nimport Loading from './Loading';\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Created by '}\n      <Link color='inherit' href='https://github.com/mdmundo'>\n        Edmundo Paulino\n      </Link>\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  upper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  }\n}));\n\nconst NoteApp = () => {\n  const [user, loading, error] = useAuthState(firebase.auth());\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component='main' className={classes.main} maxWidth='xs'>\n        <div className={classes.upper}>\n          <Avatar className={classes.avatar}>\n            <EventNoteIcon />\n          </Avatar>\n          <Typography component='h1' variant='h3'>\n            Notes\n          </Typography>\n        </div>\n        {user ? (\n          <>\n            <AddNoteForm />\n            <NoteList />\n          </>\n        ) : loading ? (\n          <Loading text='Loading User' />\n        ) : (\n          <Login />\n        )}\n      </Container>\n      <footer className={classes.footer}>\n        <Container maxWidth='sm'>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n};\n\nexport { NoteApp as default };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport NoteApp from './components/NoteApp';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: 'rgb(17, 82, 147)',\n      light: 'rgb(71, 145, 219)',\n      main: '#1976d2'\n    },\n    secondary: {\n      dark: 'rgb(154, 0, 54)',\n      light: 'rgb(227, 51, 113)',\n      main: 'rgb(220, 0, 78)'\n    }\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <NoteApp />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}