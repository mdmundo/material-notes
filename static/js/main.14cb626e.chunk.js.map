{"version":3,"sources":["context/notes-context.js","components/AddNoteForm.js","components/Note.js","components/NoteList.js","reducers/notes.js","components/NoteApp.js","reportWebVitals.js","index.js"],"names":["NotesContext","React","createContext","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","AddNoteForm","dispatch","useContext","useState","title","setTitle","body","setBody","titleHelper","setTitleHelper","bodyHelper","setBodyHelper","titleError","setTitleError","bodyError","setBodyError","classes","className","onSubmit","e","preventDefault","type","noValidate","TextField","value","onChange","target","error","helperText","variant","fullWidth","id","label","name","autoComplete","autoFocus","multiline","Button","color","Note","note","ListItem","ListItemIcon","Tooltip","placement","Checkbox","checked","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","onClick","list","maxWidth","backgroundColor","palette","background","paper","padding","display","overflow","flexDirection","grid","paddingTop","depositContext","flex","NoteList","notes","Grid","item","Paper","length","Typography","component","List","map","index","Divider","notesReducer","state","action","uuidv4","filter","Copyright","align","Link","href","Date","getFullYear","root","minHeight","main","marginBottom","avatar","upper","alignItems","footer","grey","NoteApp","useReducer","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","CssBaseline","Container","Avatar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEMA,EAAeC,IAAMC,gBCIrBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BC,OAAQ,CACNC,OAAQN,EAAMI,QAAQ,EAAG,EAAG,QAI1BG,EAAc,WAAO,IACjBC,EAAaC,qBAAWd,GAAxBa,SADgB,EAEEE,mBAAS,IAFX,mBAEjBC,EAFiB,KAEVC,EAFU,OAGAF,mBAAS,IAHT,mBAGjBG,EAHiB,KAGXC,EAHW,OAIcJ,mBAAS,IAJvB,mBAIjBK,EAJiB,KAIJC,EAJI,OAKYN,mBAAS,IALrB,mBAKjBO,EALiB,KAKLC,EALK,OAMYR,oBAAS,GANrB,mBAMjBS,EANiB,KAMLC,EANK,OAOUV,oBAAS,GAPnB,mBAOjBW,EAPiB,KAONC,EAPM,KA4BlBC,EAAUzB,IAEhB,OACE,uBAAM0B,UAAWD,EAAQtB,KAAMwB,SAtBjB,SAACC,GACfA,EAAEC,iBAEFP,GAAeT,GACfW,GAAcT,GACdG,EAAeL,EAAQ,GAAK,2BAC5BO,EAAcL,EAAO,GAAK,0BAEtBF,GAASE,IACXL,EAAS,CACPoB,KAAM,WACNjB,QACAE,SAEFD,EAAS,IACTE,EAAQ,MAOwCe,YAAU,EAA5D,UACE,cAACC,EAAA,EAAD,CACEC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOd,EAASc,EAAEO,OAAOF,QACnCG,MAAOf,EACPgB,WAAYpB,EACZqB,QAAQ,WACR9B,OAAO,SACP+B,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLC,aAAa,MACbC,WAAS,IAEX,cAACZ,EAAA,EAAD,CACEC,MAAOlB,EACPmB,SAAU,SAACN,GAAD,OAAOZ,EAAQY,EAAEO,OAAOF,QAClCG,MAAOb,EACPc,WAAYlB,EACZmB,QAAQ,WACR9B,OAAO,SACP+B,WAAS,EACTG,KAAK,OACLD,MAAM,OACNX,KAAK,OACLU,GAAG,OACHG,aAAa,MACbE,WAAS,IAEX,cAACC,EAAA,EAAD,CACEhB,KAAK,SACLS,WAAS,EACTD,QAAQ,YACRS,MAAM,UACNrB,UAAWD,EAAQlB,OALrB,0B,oHClEAyC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNvC,EAAaC,qBAAWd,GAAxBa,SAER,OACE,eAACwC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASvC,MAAM,iBAAiBwC,UAAU,OAA1C,SACE,cAACC,EAAA,EAAD,CACEC,QAASN,EAAKM,QACdrB,SAAU,SAACN,GAAD,OACRlB,EAAS,CACPoB,KAAM,cACNU,GAAIS,EAAKT,GACTe,QAAS3B,EAAEO,OAAOoB,iBAM5B,cAACC,EAAA,EAAD,CAAcC,QAASR,EAAKpC,MAAO6C,UAAWT,EAAKlC,OACnD,cAAC4C,EAAA,EAAD,UACE,cAACP,EAAA,EAAD,CAASvC,MAAM,mBAAmBwC,UAAU,QAA5C,SACE,cAACO,EAAA,EAAD,CACEC,KAAK,MACLC,QAAS,kBAAMpD,EAAS,CAAEoB,KAAM,cAAeU,GAAIS,EAAKT,MAF1D,SAGE,cAAC,IAAD,cC1BNxC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6D,KAAM,CACJ3D,MAAO,OACP4D,SAAU,OACVC,gBAAiB/D,EAAMgE,QAAQC,WAAWC,OAE5CA,MAAO,CACLC,QAASnE,EAAMI,QAAQ,GACvBgE,QAAS,OACTC,SAAU,OACVC,cAAe,UAEjBC,KAAM,CACJC,WAAYxE,EAAMI,QAAQ,IAE5BqE,eAAgB,CACdC,KAAM,OAIJC,EAAW,WAAO,IACdC,EAAUnE,qBAAWd,GAArBiF,MAEFrD,EAAUzB,IAEhB,OACE,cAAC+E,EAAA,EAAD,CAAMC,MAAI,EAACtD,UAAWD,EAAQgD,KAA9B,SACE,cAACQ,EAAA,EAAD,CAAOvD,UAAWD,EAAQ2C,MAA1B,SACoB,IAAjBU,EAAMI,OACL,gCACE,cAACC,EAAA,EAAD,CAAYC,UAAU,IAAI9C,QAAQ,KAAlC,mBAGA,cAAC6C,EAAA,EAAD,CACEpC,MAAM,gBACNrB,UAAWD,EAAQkD,eAFrB,sCAOF,cAACU,EAAA,EAAD,CAAM3D,UAAWD,EAAQsC,KAAzB,SACGe,EAAMQ,KAAI,SAACrC,EAAMsC,GAAP,OACC,IAAVA,EACE,cAAC,EAAD,CAAoBtC,KAAMA,GAAfA,EAAKT,IAEhB,qCACE,cAACgD,EAAA,EAAD,CAASlD,QAAQ,QAAQ8C,UAAU,OACnC,cAAC,EAAD,CAAoBnC,KAAMA,GAAfA,EAAKT,iB,yBCvD5BiD,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAO7D,MACb,IAAK,iBACH,OAAO6D,EAAOb,MAChB,IAAK,WACH,MAAM,CACJ,CACEtC,GAAIoD,cACJ/E,MAAO8E,EAAO9E,MACdE,KAAM4E,EAAO5E,KACbwC,SAAS,IALb,mBAOKmC,IAEP,IAAK,cACH,OAAOA,EAAMG,QAAO,SAAC5C,GAAD,OAAUA,EAAKT,KAAOmD,EAAOnD,MACnD,IAAK,cACH,OAAOkD,EAAMJ,KAAI,SAACrC,GAAD,OACfA,EAAKT,KAAOmD,EAAOnD,GAAnB,2BAA6BS,GAA7B,IAAmCM,QAASoC,EAAOpC,UAAYN,KAEnE,QACE,OAAOyC,ICVPI,EAAY,WAChB,OACE,eAACX,EAAA,EAAD,CAAY7C,QAAQ,QAAQS,MAAM,gBAAgBgD,MAAM,SAAxD,UACG,cACD,cAACC,EAAA,EAAD,CAAMjD,MAAM,UAAUkD,KAAK,6BAA3B,6BAEQ,KACP,IAAIC,MAAOC,cACX,QAKDnG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkG,KAAM,CACJ9B,QAAS,OACTE,cAAe,SACf6B,UAAW,SAEbC,KAAM,CACJjG,UAAWH,EAAMI,QAAQ,GACzBiG,aAAcrG,EAAMI,QAAQ,IAE9BkG,OAAQ,CACNhG,OAAQN,EAAMI,QAAQ,GACtB2D,gBAAiB/D,EAAMgE,QAAQR,UAAU4C,MAE3CG,MAAO,CACLnC,QAAS,OACTE,cAAe,SACfkC,WAAY,UAEdC,OAAQ,CACNtC,QAASnE,EAAMI,QAAQ,EAAG,GAC1BD,UAAW,OACX4D,gBACyB,UAAvB/D,EAAMgE,QAAQpC,KACV5B,EAAMgE,QAAQ0C,KAAK,KACnB1G,EAAMgE,QAAQ0C,KAAK,UAIvBC,EAAU,WAAO,IAAD,EACMC,qBAAWrB,EAAc,IAD/B,mBACbX,EADa,KACNpE,EADM,KAGpBqG,qBAAU,WACR,IAAMjC,EAAQkC,KAAKC,MAAMC,aAAaC,QAAQ,UAE1CrC,GACFpE,EAAS,CAAEoB,KAAM,iBAAkBgD,YAEpC,IAEHiC,qBAAU,WACRG,aAAaE,QAAQ,QAASJ,KAAKK,UAAUvC,MAC5C,CAACA,IAEJ,IAAMrD,EAAUzB,IAEhB,OACE,cAACH,EAAayH,SAAd,CAAuBrF,MAAO,CAAE6C,QAAOpE,YAAvC,SACE,sBAAKgB,UAAWD,EAAQ2E,KAAxB,UACE,cAACmB,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAWpC,UAAU,OAAO1D,UAAWD,EAAQ6E,KAAMtC,SAAS,KAA9D,UACE,sBAAKtC,UAAWD,EAAQgF,MAAxB,UACE,cAACgB,EAAA,EAAD,CAAQ/F,UAAWD,EAAQ+E,OAA3B,SACE,cAAC,IAAD,MAEF,cAACrB,EAAA,EAAD,CAAYC,UAAU,KAAK9C,QAAQ,KAAnC,mBAGA,cAAC,EAAD,OAEF,cAAC,EAAD,OAEF,wBAAQZ,UAAWD,EAAQkF,OAA3B,SACE,cAACa,EAAA,EAAD,CAAWxD,SAAS,KAApB,SACE,cAAC,EAAD,cC9EG0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14cb626e.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotesContext = React.createContext();\n\nexport { NotesContext as default };\n","import { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport NotesContext from '../context/notes-context';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst AddNoteForm = () => {\n  const { dispatch } = useContext(NotesContext);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [titleHelper, setTitleHelper] = useState('');\n  const [bodyHelper, setBodyHelper] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [bodyError, setBodyError] = useState(false);\n\n  const addNote = (e) => {\n    e.preventDefault();\n\n    setTitleError(!title);\n    setBodyError(!body);\n    setTitleHelper(title ? '' : 'Title can not be empty.');\n    setBodyHelper(body ? '' : 'Body can not be empty.');\n\n    if (title && body) {\n      dispatch({\n        type: 'ADD_NOTE',\n        title,\n        body\n      });\n      setTitle('');\n      setBody('');\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <form className={classes.form} onSubmit={addNote} noValidate>\n      <TextField\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        error={titleError}\n        helperText={titleHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        id='title'\n        label='Title'\n        name='title'\n        autoComplete='off'\n        autoFocus\n      />\n      <TextField\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        error={bodyError}\n        helperText={bodyHelper}\n        variant='outlined'\n        margin='normal'\n        fullWidth\n        name='body'\n        label='Body'\n        type='body'\n        id='body'\n        autoComplete='off'\n        multiline\n      />\n      <Button\n        type='submit'\n        fullWidth\n        variant='contained'\n        color='primary'\n        className={classes.submit}>\n        Add Note\n      </Button>\n    </form>\n  );\n};\n\nexport { AddNoteForm as default };\n","import { useContext } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport NotesContext from '../context/notes-context';\n\nconst Note = ({ note }) => {\n  const { dispatch } = useContext(NotesContext);\n\n  return (\n    <ListItem>\n      <ListItemIcon>\n        <Tooltip title='Mark this note' placement='left'>\n          <Checkbox\n            checked={note.checked}\n            onChange={(e) =>\n              dispatch({\n                type: 'TOGGLE_NOTE',\n                id: note.id,\n                checked: e.target.checked\n              })\n            }\n          />\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText primary={note.title} secondary={note.body} />\n      <ListItemSecondaryAction>\n        <Tooltip title='Delete this note' placement='right'>\n          <IconButton\n            edge='end'\n            onClick={() => dispatch({ type: 'REMOVE_NOTE', id: note.id })}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport { Note as default };\n","import { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Note from './Note';\nimport NotesContext from '../context/notes-context';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  grid: {\n    paddingTop: theme.spacing(3)\n  },\n  depositContext: {\n    flex: 1\n  }\n}));\n\nconst NoteList = () => {\n  const { notes } = useContext(NotesContext);\n\n  const classes = useStyles();\n\n  return (\n    <Grid item className={classes.grid}>\n      <Paper className={classes.paper}>\n        {notes.length === 0 ? (\n          <div>\n            <Typography component='p' variant='h4'>\n              Empty\n            </Typography>\n            <Typography\n              color='textSecondary'\n              className={classes.depositContext}>\n              There is no note here\n            </Typography>\n          </div>\n        ) : (\n          <List className={classes.list}>\n            {notes.map((note, index) =>\n              index === 0 ? (\n                <Note key={note.id} note={note} />\n              ) : (\n                <>\n                  <Divider variant='inset' component='li' />\n                  <Note key={note.id} note={note} />\n                </>\n              )\n            )}\n          </List>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport { NoteList as default };\n","import { v4 as uuidv4 } from 'uuid';\n\nconst notesReducer = (state, action) => {\n  switch (action.type) {\n    case 'POPULATE_NOTES':\n      return action.notes;\n    case 'ADD_NOTE':\n      return [\n        {\n          id: uuidv4(),\n          title: action.title,\n          body: action.body,\n          checked: false\n        },\n        ...state\n      ];\n    case 'REMOVE_NOTE':\n      return state.filter((note) => note.id !== action.id);\n    case 'TOGGLE_NOTE':\n      return state.map((note) =>\n        note.id === action.id ? { ...note, checked: action.checked } : note\n      );\n    default:\n      return state;\n  }\n};\n\nexport { notesReducer as default };\n","import { useEffect, useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddNoteForm from './AddNoteForm';\nimport NoteList from './NoteList';\nimport NotesContext from '../context/notes-context';\nimport notesReducer from '../reducers/notes';\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Created by '}\n      <Link color='inherit' href='https://github.com/mdmundo'>\n        Edmundo Paulino\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  upper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800]\n  }\n}));\n\nconst NoteApp = () => {\n  const [notes, dispatch] = useReducer(notesReducer, []);\n\n  useEffect(() => {\n    const notes = JSON.parse(localStorage.getItem('notes'));\n\n    if (notes) {\n      dispatch({ type: 'POPULATE_NOTES', notes });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const classes = useStyles();\n\n  return (\n    <NotesContext.Provider value={{ notes, dispatch }}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component='main' className={classes.main} maxWidth='xs'>\n          <div className={classes.upper}>\n            <Avatar className={classes.avatar}>\n              <EventNoteIcon />\n            </Avatar>\n            <Typography component='h1' variant='h3'>\n              Notes\n            </Typography>\n            <AddNoteForm />\n          </div>\n          <NoteList />\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth='sm'>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </NotesContext.Provider>\n  );\n};\n\nexport { NoteApp as default };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport NoteApp from './components/NoteApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NoteApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}